;Урок 2. Вывести данные из текстового файла в поле Edit по нажатию на кнопку.
;
;Задача: После нажатия на кнопку, в поле Edit текст из файла.
;
;Что нам надо?
;Создать окно с полем Edit и одной кнопкой. По нажатию на кнопку, в поле Edit выводится содержимое тектового файла
;
;Что надо сделать
;Отобразить окно, в нем отобразить пусток поле Edit, под ним отобразить кнопку с названием, создать функцию для кнопки, чтобы при нажатии на неё, возникало поле Edit с текстовым содержимым файла
;Предисловие: в основном тексте приведены сокращенные комментарии. Расширенное описание находится в конце файла и по ссылке, где приведены полное описание всех параметров использованных функций. Знак зведочки означает то что для этого элемента есть примечание. 
;"В двойных кавычках текст", в одинарных 'Функция'
;В данном случае написание программы состоит из двух этапов Работа с внешним видом и написание функций.
;Часть 1. Работа с внешним видом:
;1) Подключить библиотеку для работы с GUI. Без неё не будут работать парамертры размера элементов (ширина, высота и другие.)
;2) Включить работу с Gui 
;3) Создать форму GUI в которой будут отображаться элементы управления программой
;4) Включить функцию закрытия окна по нажатию на системную кнопку "Закрыть" (красный крестик)
;5) Создать переменную в которой будет храниться Поле Edit.  
;6) Создать переменную, в которой будет храниться созданная кнопка 
;7) Создать событие - действие, выполняемое после нажатия на кнопку. 
;8) Отобразить окно с созданными элементами управления и полем Edit
;9) создать бесконечный цикл для того, чтоб окно программы не закрывалось автоматически по истечению определенного времени
;
;Часть 2. Создание функций
;10) Создать (написать) Функцию вывода содержимого текстового файла в Edit
;11) Создать функцию которая завершает работу программы после нажатия на системную кнопку "Закрыть окно"
; Реализация: см. ниже:

#Include <Guiconstants.au3> ;1) Подключим библиотеку для работы с GUI. Без неё не будут работать парамертры размера элементов (ширина, высота и другие.)
Opt('GuiOnEventMode', '1') ;2) Включим работу с Gui (описание в конце файла)

			GUICreate('Reading file...',-1,-1,-1,-1) ; 3) Создадим окно. Функция: GUICreate() Создаёт GUI окно. Использованные параметры: GUICreate('title - заголовок окна. Заключается в одинарные или двойные кавычки', ширина окна, высота окна, Координата левого края, Координата верхнего края) *1
			GUISetOnEvent($GUI_EVENT_CLOSE, _Exit) ; 4) Включим функцию закрытия окна по нажатию на системную кнопку "Закрыть" (красный крестик). Функция: GUICtrlSetOnEvent() - Указывает на функцию, которая должна выполниться при нажатии элемента управления. Использованные параметры: GUISetOnEvent($GUI_EVENT_CLOSE *2, пользовательская функция)
			$data = GUICtrlCreateEdit("",140,40,129,20,1) ;5)Создадим поле Edit и присваиваем его переменной $data. Функция: GUICtrlCreateEdit() Создаёт Edit в GUI. Использованные параметры: GUICtrlCreateEdit("text - Текст элемента", Координата левого края, [необязательный параметр]Координата верхнего края, [необязательный параметр]Ширина элемента, [необязательный] Высота элемента, [необязательный] Стиль элемента*2)
			$event = GUICtrlCreateButton ("Что в файле?", 160, 65, 75, 30) ; 6) Создадим переменную, в которой будет храниться созданная кнопка. Функция: GUICtrlCreateButton() - Создаёт кнопку в GUI.  Использованные параметры:  GUICtrlCreateButton("text - Текст кнопки", Координата левого края,  Координата верхнего края, [необязательный] Ширина элемента (по умолчанию устанавливается по длине текста), [необязательный] Высота элемента (по умолчанию устанавливается по высоте текста)*3)
			GUICtrlSetOnEvent($event, '_ReadText') ; 7) Создадим событие - действие, выполняемое после нажатия на кнопку. В данном случае, вывод в поле Edit содержимого текстового файла. Функция: GUICtrlSetOnEvent() - Указывает на функцию, которая должна выполниться при нажатии элемента управления. Использованные параметры: GUICtrlSetOnEvent(controlID - Идентификатор элемента возвращаемый функцией GUICtrlCreate...., "function - имя вызываемой функции(в ДАННОМ СЛУЧАЕ ПОЛЬЗОВАТЕЛЬСКАЯ ФУНКЦИЯ _ReadText)") 
			GUISetState(@SW_SHOW) ;8)
	
While ('1') ; 9)
	Sleep('3000') ; 9)
WEnd ; 9)
	
Func _ReadText() ; 10)
	$file = FileOpen(@ScriptDir & '\text.txt', 0)
	$line = FileReadLine($file)
	$data = GUICtrlCreateEdit($line,'140','40','129','20','1')
	;или в Message Box
	;MsgBox(1, "Прочитанная строка:", $line)
EndFunc

Func _Exit () ; 11)
	Exit
EndFunc


;1) 

;2)

;3) GUICreate() - ссылка на подробное описание: https://autoit-script.ru/autoit3_docs/functions/GUICreate.htm
;3) *1  - Координата левого края. По умолчанию (-1), окно создаётся в центре. Если параметр задан, нужно также задать координату верхнего края.

;4) GUISetOnEvent($GUI_EVENT_CLOSE, _Exit): $GUI_EVENT_CLOSE - Закрыть окно (либо по определённым кнопкам или системному меню). $GUI_EVENT_CLOSE - относится к специальным идентификаторам. Таблицу специальных идентификаторов смотри здесь https://autoit-script.ru/autoit3_docs/functions/GUISetOnEvent.htm 
;4)Полное описание функции GUISetOnEvent() смотри здесь https://autoit-script.ru/autoit3_docs/functions/GUISetOnEvent.htm Главное указать специальный идентификатор и функцию созданную пользователем которая будет вызвана после нажатия в данном случае на кнопку "Закрыть окно" 

;5) Полное описание функции	GUICtrlCreateEdit() смотри здесь https://autoit-script.ru/autoit3_docs/functions/GUICtrlCreateEdit.htm
;5) *2 [необязательный] Стиль элемента. Смотрите Стили элементов GUI в приложении - https://autoit-script.ru/autoit3_docs/appendix/GUIStyles.htm#Edit

;6) GUICtrlCreateButton() - ссылка на подробное описание: https://autoit-script.ru/autoit3_docs/functions/GUICtrlCreateButton.htm
;6) *3 Если координаты левого и верхнего края -1, тогда координата в соответствии с GUICoordMode см. в таблице по ссылке https://autoit-script.ru/autoit3_docs/functions/AutoItSetOption.htm#GUICoordMode В данном случае При нажатии на кнопку (которая находится в переменной), вызывалась (выполнилась) функция с нужными нам действиями, в данном случае вывод содержимого файла в наше поле Edit. 


;7)GUICtrlSetOnEvent() - ссылка на подробное описание: https://autoit-script.ru/autoit3_docs/functions/GUICtrlSetOnEvent.htm
;7)*4 В данном случае Идентификатором элемента возвращаемый функцией GUICtrlCreate.... является имя переменной в которую мы поместили что-то созданное посредством GUICtrlCreate... (данная функция имеет множество вариантов, например GUICtrlCreateButton, GUICtrlCreateCheckbox, GUICtrlCreateEdit). В данном случае идентификатором в $event = GUICtrlCreateButton ("Что в файле?", 160, 65, 75, 30) является имя переменной в которую мы поместили (присвоили) GUICtrlCreateButton ("Что в файле?", 160, 65, 75, 30) является $event 